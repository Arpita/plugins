/**
 * Coinsecure Api Documentation
 * To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
 *
 * OpenAPI spec version: beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * SuccCoinRefData
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-08-21T18:38:01.890Z")
public class SuccCoinRefData   {
  @SerializedName("refPercent")
  private Double refPercent = null;

  @SerializedName("time")
  private Long time = null;

  @SerializedName("orderID")
  private String orderID = null;

  @SerializedName("refID")
  private String refID = null;

  @SerializedName("tradeID")
  private String tradeID = null;

  @SerializedName("newUserIDMasked")
  private String newUserIDMasked = null;

  @SerializedName("depositID")
  private String depositID = null;

  @SerializedName("amtPaid")
  private Long amtPaid = null;

  public SuccCoinRefData refPercent(Double refPercent) {
    this.refPercent = refPercent;
    return this;
  }

   /**
   * Get refPercent
   * @return refPercent
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Double getRefPercent() {
    return refPercent;
  }

  public void setRefPercent(Double refPercent) {
    this.refPercent = refPercent;
  }

  public SuccCoinRefData time(Long time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Long getTime() {
    return time;
  }

  public void setTime(Long time) {
    this.time = time;
  }

  public SuccCoinRefData orderID(String orderID) {
    this.orderID = orderID;
    return this;
  }

   /**
   * Get orderID
   * @return orderID
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getOrderID() {
    return orderID;
  }

  public void setOrderID(String orderID) {
    this.orderID = orderID;
  }

  public SuccCoinRefData refID(String refID) {
    this.refID = refID;
    return this;
  }

   /**
   * Get refID
   * @return refID
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getRefID() {
    return refID;
  }

  public void setRefID(String refID) {
    this.refID = refID;
  }

  public SuccCoinRefData tradeID(String tradeID) {
    this.tradeID = tradeID;
    return this;
  }

   /**
   * Get tradeID
   * @return tradeID
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getTradeID() {
    return tradeID;
  }

  public void setTradeID(String tradeID) {
    this.tradeID = tradeID;
  }

  public SuccCoinRefData newUserIDMasked(String newUserIDMasked) {
    this.newUserIDMasked = newUserIDMasked;
    return this;
  }

   /**
   * Get newUserIDMasked
   * @return newUserIDMasked
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getNewUserIDMasked() {
    return newUserIDMasked;
  }

  public void setNewUserIDMasked(String newUserIDMasked) {
    this.newUserIDMasked = newUserIDMasked;
  }

  public SuccCoinRefData depositID(String depositID) {
    this.depositID = depositID;
    return this;
  }

   /**
   * Get depositID
   * @return depositID
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getDepositID() {
    return depositID;
  }

  public void setDepositID(String depositID) {
    this.depositID = depositID;
  }

  public SuccCoinRefData amtPaid(Long amtPaid) {
    this.amtPaid = amtPaid;
    return this;
  }

   /**
   * Get amtPaid
   * @return amtPaid
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Long getAmtPaid() {
    return amtPaid;
  }

  public void setAmtPaid(Long amtPaid) {
    this.amtPaid = amtPaid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuccCoinRefData succCoinRefData = (SuccCoinRefData) o;
    return Objects.equals(this.refPercent, succCoinRefData.refPercent) &&
        Objects.equals(this.time, succCoinRefData.time) &&
        Objects.equals(this.orderID, succCoinRefData.orderID) &&
        Objects.equals(this.refID, succCoinRefData.refID) &&
        Objects.equals(this.tradeID, succCoinRefData.tradeID) &&
        Objects.equals(this.newUserIDMasked, succCoinRefData.newUserIDMasked) &&
        Objects.equals(this.depositID, succCoinRefData.depositID) &&
        Objects.equals(this.amtPaid, succCoinRefData.amtPaid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refPercent, time, orderID, refID, tradeID, newUserIDMasked, depositID, amtPaid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuccCoinRefData {\n");
    
    sb.append("    refPercent: ").append(toIndentedString(refPercent)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    orderID: ").append(toIndentedString(orderID)).append("\n");
    sb.append("    refID: ").append(toIndentedString(refID)).append("\n");
    sb.append("    tradeID: ").append(toIndentedString(tradeID)).append("\n");
    sb.append("    newUserIDMasked: ").append(toIndentedString(newUserIDMasked)).append("\n");
    sb.append("    depositID: ").append(toIndentedString(depositID)).append("\n");
    sb.append("    amtPaid: ").append(toIndentedString(amtPaid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

