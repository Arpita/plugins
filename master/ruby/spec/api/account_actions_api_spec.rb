=begin
Coinsecure Api Documentation

To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.

OpenAPI spec version: 1.0b

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AccountActionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountActionsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AccountActionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountActionsApi' do
    it 'should create an instact of AccountActionsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AccountActionsApi)
    end
  end

  # unit tests for v1login
  # Creates a Login Instance and returns an API Key.
  # Creates a Login Instance and returns an API Key
  # @param body Please send the form with valid inputs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [StandardLoginResultData]
  describe 'v1login test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1logininitiate
  # Initiate Login
  # Sends an Email with a Verification Link.
  # @param body Enter a valid Login ID. This method will send an email with a token to be used for login.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [StandardInitiateLoginResultData]
  describe 'v1logininitiate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1loginpasswordforgot
  # Sends an email with a password reset token
  # Sends an email with a password reset token
  # @param body Enter a valid and registered Email ID.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1loginpasswordforgot test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1signup
  # Creates a new Unverified Account.
  # Creates a new Unverified Account.
  # @param body Please send the form with valid inputs.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1signup test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userbankotp_number
  # Send OTP for Bank Link
  # Send OTP for an additional Bank Link.
  # @param number 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [StandardInitiateLoginResultData]
  describe 'v1userbankotp_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangekyc
  # Submits a New Bank Link and initial KYC Documents.
  # Submits a New Bank Link and initial KYC Documents.
  # @param pan_number Please enter your Pan Card Number
  # @param acct_nick Please enter an Account NickName
  # @param name Please enter your Name as it appears on your Bank account.
  # @param ban Please enter your Bank account number.
  # @param ifsc Please enter your IFSC Code.
  # @param acct_type Please enter your Coinsecure account type. Allowable Values are Personal or Company.
  # @param ban_type Please enter your Bank account type. Allowable Values are Savings or Current.
  # @param phone Please enter your Valid Phone Number.
  # @param otp Please enter your OTP from SMS. The code can be requested from /v1/user/bank/otp/:number.
  # @param file Enter a valid image, pdf or zip file under 5 MB in size.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :message Please enter an optional message if needed.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userexchangekyc test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1usergcm_code
  # Delete GCM Code
  # Delete GCM Code and associated API Key.
  # @param code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1usergcm_code test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userkycotp_number
  # Send OTP for KYC Link
  # Send OTP for KYC Link.
  # @param number 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userkycotp_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userlogout
  # Logout User
  # Logs out user and Deletes the api key and associated session data.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userlogout test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1usernetkicreate
  # Create Neki Wallet Name
  # Creates a new Netki Wallet Name.
  # @param body Enter a valid Netki name and Bitcoin address from Wallet or Exchange.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1usernetkicreate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1usernetkiupdate
  # Update Netki Address
  # Updates the address on an existing wallet name.
  # @param body Enter a valid Bitcoin address from Wallet or Exchange to update the wallet name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1usernetkiupdate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userprofileimagedelete
  # Delete Profile Image
  # Deletes a profile Image.
  # @param body Please enter a valid Netki name associated with your prfile Image.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userprofileimagedelete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userprofileimageupdate
  # Update Profile Image
  # Updates Profile Image and allows public or private options for netki profile page.
  # @param netki_name Please enter your Netki Wallet Name.
  # @param is_public Please enter if this image can be public.
  # @param file Enter a valid image, pdf or zip file under 5 MB in size.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userprofileimageupdate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userprofilephone
  # New Profile Phone
  # Set a New Profile Phone Number.
  # @param body You can get an otp to update your profile phone number from /v1/user/profile/phone/otp/:number
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Enter a valid Api Key.
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userprofilephone test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userprofilephone_number
  # Delete Profile Phone Number
  # Delete Profile Phone Number.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userprofilephone_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userprofilephoneotp_number
  # Send OTP for Profile Phone
  # Send OTP for Profile Phone addition or updation.
  # @param number 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [SuccessResult]
  describe 'v1userprofilephoneotp_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
