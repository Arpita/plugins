=begin
Coinsecure Api Documentation

To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.

OpenAPI spec version: 1.0b

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::WalletDataApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'WalletDataApi' do
  before do
    # run before each test
    @instance = SwaggerClient::WalletDataApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WalletDataApi' do
    it 'should create an instact of WalletDataApi' do
      expect(@instance).to be_instance_of(SwaggerClient::WalletDataApi)
    end
  end

  # unit tests for v1userwalletcoinaddress_wallet_id
  # Wallet Bitcoin Addresses
  # Gets a List of Users Bitcoin Deposit Addresses.
  # @param wallet_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletAddressDataResponse]
  describe 'v1userwalletcoinaddress_wallet_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userwalletcoindepositconfirmed_wallet_id
  # Confirmed Wallet Transactions
  # Gets your Confirmed Wallet Bitcoin Transactions.
  # @param wallet_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletAddressDataResponse]
  describe 'v1userwalletcoindepositconfirmed_wallet_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userwalletcoindepositconfirmedall
  # Confirmed Wallet Deposit
  # Gets the total confirmed transactions across all accounts and addresses
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletAddressDataResponse]
  describe 'v1userwalletcoindepositconfirmedall test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userwalletcoindepositunconfirmed_wallet_id
  # Unconfirmed Transactions in Wallet
  # Gets the unconfirmed transactions on an account/ wallet.
  # @param wallet_id 
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [nil]
  describe 'v1userwalletcoindepositunconfirmed_wallet_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userwalletcoindepositunconfirmedall
  # All Unconfirmed Deposits
  # Gets the total unconfirmed transactions across all accounts and addresses
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [nil]
  describe 'v1userwalletcoindepositunconfirmedall test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userwalletcoinwallets
  # Wallet Details
  # Gets a List of Users Wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization API object to be added
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletsDataResponse]
  describe 'v1userwalletcoinwallets test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1walletwithdrawcancelled
  # Cancelled Coin Withdrawals
  # Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletCoinWithdrawDataResponse]
  describe 'v1walletwithdrawcancelled test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1walletwithdrawcompleted
  # Completed Coin Withdrawals
  # Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletCoinWithdrawDataResponse]
  describe 'v1walletwithdrawcompleted test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1walletwithdrawunverified
  # Unverified Coin Withdrawals
  # Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletCoinWithdrawDataResponse]
  describe 'v1walletwithdrawunverified test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1walletwithdrawverified
  # Verified Coin Withdrawals
  # Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [WalletCoinWithdrawDataResponse]
  describe 'v1walletwithdrawverified test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
