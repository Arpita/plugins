=begin
Coinsecure Api Documentation

To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.

OpenAPI spec version: 1.0b

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ExchangeBankFiatDataApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ExchangeBankFiatDataApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ExchangeBankFiatDataApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ExchangeBankFiatDataApi' do
    it 'should create an instact of ExchangeBankFiatDataApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ExchangeBankFiatDataApi)
    end
  end

  # unit tests for v1userexchangebankfiataccounts
  # Exchange Bitcoin Deposit Addresses
  # Gets a List of Users Exchange Bitcoin Addresses.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatBankDataResponse]
  describe 'v1userexchangebankfiataccounts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatbalanceavailable
  # Available Exchange Fiat Balance
  # Returns balance which is in Available for Trades. The response is in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [RateDataResponse]
  describe 'v1userexchangebankfiatbalanceavailable test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatbalancepending
  # In Trade Coin Balance
  # Returns in-trade or pending fiat balance in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [RateDataResponse]
  describe 'v1userexchangebankfiatbalancepending test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatbalancetotal
  # Total Exchange Fiat Balance
  # Returns users total fiat balance in paisa. Pending + Available
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [RateDataResponse]
  describe 'v1userexchangebankfiatbalancetotal test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatdepositcancelled
  # Cancelled Exchange Fiat Deposits
  # Gets a List of Cancelled Exchange Fiat Deposits. The value and fees are in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatDepDataResponse]
  describe 'v1userexchangebankfiatdepositcancelled test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatdepositunverified
  # Unverified Exchange Fiat Deposits
  # Gets a List of Unverified Exchange Fiat Deposits. The value and fees are in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatDepDataResponse]
  describe 'v1userexchangebankfiatdepositunverified test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatdepositverified
  # Verified Exchange Fiat Deposits
  # Gets a List of Verified Exchange Fiat Deposits. The value and fees are in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatDepDataResponse]
  describe 'v1userexchangebankfiatdepositverified test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatwithdrawcancelled
  # Cancelled Exchange Fiat Withdrawals
  # Gets a List of Cancelled Exchange Fiat Withdrawals. The fiat value is in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatWithDataResponse]
  describe 'v1userexchangebankfiatwithdrawcancelled test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatwithdrawcompleted
  # Completed Exchange Fiat Withdrawals
  # Gets a List of Completed Exchange Fiat Withdrawals. The fiat value is in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatWithDataResponse]
  describe 'v1userexchangebankfiatwithdrawcompleted test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatwithdrawunverified
  # Unverified Exchange Fiat Withdrawals
  # Gets a List of Unverified Exchange Fiat Withdrawals. The fiat value is in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatWithDataResponse]
  describe 'v1userexchangebankfiatwithdrawunverified test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1userexchangebankfiatwithdrawverified
  # Verified Exchange Fiat Withdrawals
  # Gets a List of Verified Exchange Fiat Withdrawals. The fiat value is in paisa.
  # @param authorization API object to be added
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from From date in Epoch, defaults to 0 if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :to To Date in Epoch, defaults to current time if invalid input or greater than current time. (Optional)
  # @option opts [Integer] :max Max defaults to 10 if invalid input and defaults to 100 if greater than 100. (Optional)
  # @option opts [Integer] :offset Offset defaults to 0 if input is invalid. (Optional)
  # @option opts [String] :accept JSON, XML or CSV can be returned (Optional)
  # @return [FiatWithDataResponse]
  describe 'v1userexchangebankfiatwithdrawverified test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
