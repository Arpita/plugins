/**
 * Coinsecure Api Documentation
 * To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
 *
 * OpenAPI spec version: beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGNumberOtp.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGNumberOtp::SWGNumberOtp(QString* json) {
    init();
    this->fromJson(*json);
}

SWGNumberOtp::SWGNumberOtp() {
    init();
}

SWGNumberOtp::~SWGNumberOtp() {
    this->cleanup();
}

void
SWGNumberOtp::init() {
    number = new QString("");
    otp = new QString("");
}

void
SWGNumberOtp::cleanup() {
    
    if(number != nullptr) {
        delete number;
    }

    if(otp != nullptr) {
        delete otp;
    }
}

SWGNumberOtp*
SWGNumberOtp::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGNumberOtp::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&number, pJson["number"], "QString", "QString");
    ::Swagger::setValue(&otp, pJson["otp"], "QString", "QString");
}

QString
SWGNumberOtp::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGNumberOtp::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("number"), number, obj, QString("QString"));

    toJsonValue(QString("otp"), otp, obj, QString("QString"));

    return obj;
}

QString*
SWGNumberOtp::getNumber() {
    return number;
}
void
SWGNumberOtp::setNumber(QString* number) {
    this->number = number;
}

QString*
SWGNumberOtp::getOtp() {
    return otp;
}
void
SWGNumberOtp::setOtp(QString* otp) {
    this->otp = otp;
}



} /* namespace Swagger */

