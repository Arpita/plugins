/**
 * Coinsecure Api Documentation
 * To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
 *
 * OpenAPI spec version: beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGSignupForm.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSignupForm::SWGSignupForm(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSignupForm::SWGSignupForm() {
    init();
}

SWGSignupForm::~SWGSignupForm() {
    this->cleanup();
}

void
SWGSignupForm::init() {
    name = new QString("");
    email = new QString("");
    password = new QString("");
    repeat_password = new QString("");
    ref_id = new QString("");
}

void
SWGSignupForm::cleanup() {
    
    if(name != nullptr) {
        delete name;
    }

    if(email != nullptr) {
        delete email;
    }

    if(password != nullptr) {
        delete password;
    }

    if(repeat_password != nullptr) {
        delete repeat_password;
    }

    if(ref_id != nullptr) {
        delete ref_id;
    }
}

SWGSignupForm*
SWGSignupForm::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSignupForm::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&email, pJson["email"], "QString", "QString");
    ::Swagger::setValue(&password, pJson["password"], "QString", "QString");
    ::Swagger::setValue(&repeat_password, pJson["repeat_password"], "QString", "QString");
    ::Swagger::setValue(&ref_id, pJson["ref_id"], "QString", "QString");
}

QString
SWGSignupForm::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSignupForm::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("name"), name, obj, QString("QString"));

    toJsonValue(QString("email"), email, obj, QString("QString"));

    toJsonValue(QString("password"), password, obj, QString("QString"));

    toJsonValue(QString("repeat_password"), repeat_password, obj, QString("QString"));

    toJsonValue(QString("ref_id"), ref_id, obj, QString("QString"));

    return obj;
}

QString*
SWGSignupForm::getName() {
    return name;
}
void
SWGSignupForm::setName(QString* name) {
    this->name = name;
}

QString*
SWGSignupForm::getEmail() {
    return email;
}
void
SWGSignupForm::setEmail(QString* email) {
    this->email = email;
}

QString*
SWGSignupForm::getPassword() {
    return password;
}
void
SWGSignupForm::setPassword(QString* password) {
    this->password = password;
}

QString*
SWGSignupForm::getRepeatPassword() {
    return repeat_password;
}
void
SWGSignupForm::setRepeatPassword(QString* repeat_password) {
    this->repeat_password = repeat_password;
}

QString*
SWGSignupForm::getRefId() {
    return ref_id;
}
void
SWGSignupForm::setRefId(QString* ref_id) {
    this->ref_id = ref_id;
}



} /* namespace Swagger */

