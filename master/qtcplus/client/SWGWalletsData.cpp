/**
 * Coinsecure Api Documentation
 * To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
 *
 * OpenAPI spec version: beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGWalletsData.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGWalletsData::SWGWalletsData(QString* json) {
    init();
    this->fromJson(*json);
}

SWGWalletsData::SWGWalletsData() {
    init();
}

SWGWalletsData::~SWGWalletsData() {
    this->cleanup();
}

void
SWGWalletsData::init() {
    wallet_id = new QString("");
    name = new QString("");
    coin_balance = 0L;
    time = 0L;
    info = new QString("");
    netki = new QString("");
}

void
SWGWalletsData::cleanup() {
    
    if(wallet_id != nullptr) {
        delete wallet_id;
    }

    if(name != nullptr) {
        delete name;
    }



    if(info != nullptr) {
        delete info;
    }

    if(netki != nullptr) {
        delete netki;
    }
}

SWGWalletsData*
SWGWalletsData::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGWalletsData::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&wallet_id, pJson["wallet_id"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&coin_balance, pJson["coin_balance"], "qint64", "");
    ::Swagger::setValue(&time, pJson["time"], "qint64", "");
    ::Swagger::setValue(&info, pJson["info"], "QString", "QString");
    ::Swagger::setValue(&netki, pJson["netki"], "QString", "QString");
}

QString
SWGWalletsData::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGWalletsData::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("wallet_id"), wallet_id, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    obj->insert("coin_balance", QJsonValue(coin_balance));

    obj->insert("time", QJsonValue(time));

    toJsonValue(QString("info"), info, obj, QString("QString"));

    toJsonValue(QString("netki"), netki, obj, QString("QString"));

    return obj;
}

QString*
SWGWalletsData::getWalletId() {
    return wallet_id;
}
void
SWGWalletsData::setWalletId(QString* wallet_id) {
    this->wallet_id = wallet_id;
}

QString*
SWGWalletsData::getName() {
    return name;
}
void
SWGWalletsData::setName(QString* name) {
    this->name = name;
}

qint64
SWGWalletsData::getCoinBalance() {
    return coin_balance;
}
void
SWGWalletsData::setCoinBalance(qint64 coin_balance) {
    this->coin_balance = coin_balance;
}

qint64
SWGWalletsData::getTime() {
    return time;
}
void
SWGWalletsData::setTime(qint64 time) {
    this->time = time;
}

QString*
SWGWalletsData::getInfo() {
    return info;
}
void
SWGWalletsData::setInfo(QString* info) {
    this->info = info;
}

QString*
SWGWalletsData::getNetki() {
    return netki;
}
void
SWGWalletsData::setNetki(QString* netki) {
    this->netki = netki;
}



} /* namespace Swagger */

