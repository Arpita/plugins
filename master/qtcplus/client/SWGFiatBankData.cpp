/**
 * Coinsecure Api Documentation
 * To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
 *
 * OpenAPI spec version: beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGFiatBankData.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGFiatBankData::SWGFiatBankData(QString* json) {
    init();
    this->fromJson(*json);
}

SWGFiatBankData::SWGFiatBankData() {
    init();
}

SWGFiatBankData::~SWGFiatBankData() {
    this->cleanup();
}

void
SWGFiatBankData::init() {
    time = 0L;
    status = new QString("");
    update_time = 0L;
    update_message = new QString("");
    bank_id = new QString("");
    info = new QString("");
    account_number = new QString("");
    account_nick = new QString("");
    account_type = new QString("");
    account_id = new QString("");
}

void
SWGFiatBankData::cleanup() {
    

    if(status != nullptr) {
        delete status;
    }


    if(update_message != nullptr) {
        delete update_message;
    }

    if(bank_id != nullptr) {
        delete bank_id;
    }

    if(info != nullptr) {
        delete info;
    }

    if(account_number != nullptr) {
        delete account_number;
    }

    if(account_nick != nullptr) {
        delete account_nick;
    }

    if(account_type != nullptr) {
        delete account_type;
    }

    if(account_id != nullptr) {
        delete account_id;
    }
}

SWGFiatBankData*
SWGFiatBankData::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGFiatBankData::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&time, pJson["time"], "qint64", "");
    ::Swagger::setValue(&status, pJson["status"], "QString", "QString");
    ::Swagger::setValue(&update_time, pJson["update_time"], "qint64", "");
    ::Swagger::setValue(&update_message, pJson["update_message"], "QString", "QString");
    ::Swagger::setValue(&bank_id, pJson["bank_id"], "QString", "QString");
    ::Swagger::setValue(&info, pJson["info"], "QString", "QString");
    ::Swagger::setValue(&account_number, pJson["account_number"], "QString", "QString");
    ::Swagger::setValue(&account_nick, pJson["account_nick"], "QString", "QString");
    ::Swagger::setValue(&account_type, pJson["account_type"], "QString", "QString");
    ::Swagger::setValue(&account_id, pJson["account_id"], "QString", "QString");
}

QString
SWGFiatBankData::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGFiatBankData::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("time", QJsonValue(time));

    toJsonValue(QString("status"), status, obj, QString("QString"));

    obj->insert("update_time", QJsonValue(update_time));

    toJsonValue(QString("update_message"), update_message, obj, QString("QString"));

    toJsonValue(QString("bank_id"), bank_id, obj, QString("QString"));

    toJsonValue(QString("info"), info, obj, QString("QString"));

    toJsonValue(QString("account_number"), account_number, obj, QString("QString"));

    toJsonValue(QString("account_nick"), account_nick, obj, QString("QString"));

    toJsonValue(QString("account_type"), account_type, obj, QString("QString"));

    toJsonValue(QString("account_id"), account_id, obj, QString("QString"));

    return obj;
}

qint64
SWGFiatBankData::getTime() {
    return time;
}
void
SWGFiatBankData::setTime(qint64 time) {
    this->time = time;
}

QString*
SWGFiatBankData::getStatus() {
    return status;
}
void
SWGFiatBankData::setStatus(QString* status) {
    this->status = status;
}

qint64
SWGFiatBankData::getUpdateTime() {
    return update_time;
}
void
SWGFiatBankData::setUpdateTime(qint64 update_time) {
    this->update_time = update_time;
}

QString*
SWGFiatBankData::getUpdateMessage() {
    return update_message;
}
void
SWGFiatBankData::setUpdateMessage(QString* update_message) {
    this->update_message = update_message;
}

QString*
SWGFiatBankData::getBankId() {
    return bank_id;
}
void
SWGFiatBankData::setBankId(QString* bank_id) {
    this->bank_id = bank_id;
}

QString*
SWGFiatBankData::getInfo() {
    return info;
}
void
SWGFiatBankData::setInfo(QString* info) {
    this->info = info;
}

QString*
SWGFiatBankData::getAccountNumber() {
    return account_number;
}
void
SWGFiatBankData::setAccountNumber(QString* account_number) {
    this->account_number = account_number;
}

QString*
SWGFiatBankData::getAccountNick() {
    return account_nick;
}
void
SWGFiatBankData::setAccountNick(QString* account_nick) {
    this->account_nick = account_nick;
}

QString*
SWGFiatBankData::getAccountType() {
    return account_type;
}
void
SWGFiatBankData::setAccountType(QString* account_type) {
    this->account_type = account_type;
}

QString*
SWGFiatBankData::getAccountId() {
    return account_id;
}
void
SWGFiatBankData::setAccountId(QString* account_id) {
    this->account_id = account_id;
}



} /* namespace Swagger */

