/**
 * Coinsecure Api Documentation
 * To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
 *
 * OpenAPI spec version: beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGSendCoin.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSendCoin::SWGSendCoin(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSendCoin::SWGSendCoin() {
    init();
}

SWGSendCoin::~SWGSendCoin() {
    this->cleanup();
}

void
SWGSendCoin::init() {
    satoshis = 0L;
    to_addr = new QString("");
    msg = new QString("");
    pin = new QString("");
    fees = NULL;
}

void
SWGSendCoin::cleanup() {
    

    if(to_addr != nullptr) {
        delete to_addr;
    }

    if(msg != nullptr) {
        delete msg;
    }

    if(pin != nullptr) {
        delete pin;
    }

    if(fees != nullptr) {
        delete fees;
    }
}

SWGSendCoin*
SWGSendCoin::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSendCoin::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&satoshis, pJson["satoshis"], "qint64", "");
    ::Swagger::setValue(&to_addr, pJson["to_addr"], "QString", "QString");
    ::Swagger::setValue(&msg, pJson["msg"], "QString", "QString");
    ::Swagger::setValue(&pin, pJson["pin"], "QString", "QString");
    ::Swagger::setValue(&fees, pJson["fees"], "SWGObject", "SWGObject");
}

QString
SWGSendCoin::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSendCoin::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("satoshis", QJsonValue(satoshis));

    toJsonValue(QString("to_addr"), to_addr, obj, QString("QString"));

    toJsonValue(QString("msg"), msg, obj, QString("QString"));

    toJsonValue(QString("pin"), pin, obj, QString("QString"));

    toJsonValue(QString("fees"), fees, obj, QString("SWGObject"));

    return obj;
}

qint64
SWGSendCoin::getSatoshis() {
    return satoshis;
}
void
SWGSendCoin::setSatoshis(qint64 satoshis) {
    this->satoshis = satoshis;
}

QString*
SWGSendCoin::getToAddr() {
    return to_addr;
}
void
SWGSendCoin::setToAddr(QString* to_addr) {
    this->to_addr = to_addr;
}

QString*
SWGSendCoin::getMsg() {
    return msg;
}
void
SWGSendCoin::setMsg(QString* msg) {
    this->msg = msg;
}

QString*
SWGSendCoin::getPin() {
    return pin;
}
void
SWGSendCoin::setPin(QString* pin) {
    this->pin = pin;
}

SWGObject*
SWGSendCoin::getFees() {
    return fees;
}
void
SWGSendCoin::setFees(SWGObject* fees) {
    this->fees = fees;
}



} /* namespace Swagger */

