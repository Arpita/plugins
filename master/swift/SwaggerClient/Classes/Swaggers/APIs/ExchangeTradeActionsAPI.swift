//
// ExchangeTradeActionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ExchangeTradeActionsAPI: APIBase {
    /**
     Cancel Open Sell Order
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangeaskcancel(body body: AskID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangeaskcancelWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancel Open Sell Order
     - DELETE /v1/user/exchange/ask/cancel
     - Cancels a BTC Sell Order. Orders can only be cancelled if they are in a pending state.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangeaskcancelWithRequestBuilder(body body: AskID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/ask/cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     BTC Sell Order
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangeasknew(body body: RateVolData, completion: ((data: SuccessResultList?, error: ErrorType?) -> Void)) {
        v1userexchangeasknewWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     BTC Sell Order
     - PUT /v1/user/exchange/ask/new
     - Creates a BTC Sell Order. If the order cannot be fulfilled completely, data can be found in allAsks and wil be added as a pending order.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResultList> 
     */
    public class func v1userexchangeasknewWithRequestBuilder(body body: RateVolData) -> RequestBuilder<SuccessResultList> {
        let path = "/v1/user/exchange/ask/new"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResultList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancel Open Buy Order
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebidcancel(body body: BidID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebidcancelWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancel Open Buy Order
     - DELETE /v1/user/exchange/bid/cancel
     - Cancels a BTC Buy Order. Orders can only be cancelled if they are in a pending state.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebidcancelWithRequestBuilder(body body: BidID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bid/cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     BTC Buy Order
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebidnew(body body: RateVolData, completion: ((data: SuccessResultList?, error: ErrorType?) -> Void)) {
        v1userexchangebidnewWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     BTC Buy Order
     - PUT /v1/user/exchange/bid/new
     - Creates a BTC Buy Order. If the order cannot be fulfilled completely, data can be found in allAsks and wil be added as a pending order.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResultList> 
     */
    public class func v1userexchangebidnewWithRequestBuilder(body body: RateVolData) -> RequestBuilder<SuccessResultList> {
        let path = "/v1/user/exchange/bid/new"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResultList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Instantly Buy BTC
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangeinstantbuy(body body: MinFiat, completion: ((data: SuccessResultList?, error: ErrorType?) -> Void)) {
        v1userexchangeinstantbuyWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Instantly Buy BTC
     - PUT /v1/user/exchange/instant/buy
     - Instantly buys BTC at the closest rate found. This tool will sell at any rate needed to complete the order. It will never exceed the amount, but may fall below.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResultList> 
     */
    public class func v1userexchangeinstantbuyWithRequestBuilder(body body: MinFiat) -> RequestBuilder<SuccessResultList> {
        let path = "/v1/user/exchange/instant/buy"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResultList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Instantly Sell BTC
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangeinstantsell(body body: MaxVol, completion: ((data: SuccessResultList?, error: ErrorType?) -> Void)) {
        v1userexchangeinstantsellWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Instantly Sell BTC
     - PUT /v1/user/exchange/instant/sell
     - Instantly sells BTC at the closest rate found. This tool will sell at any rate needed to complete the order. It will never exceed the amount, but may fall below.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ "aeiou" ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <message>string</message>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResultList> 
     */
    public class func v1userexchangeinstantsellWithRequestBuilder(body body: MaxVol) -> RequestBuilder<SuccessResultList> {
        let path = "/v1/user/exchange/instant/sell"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResultList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
