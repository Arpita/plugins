//
// WalletDataAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class WalletDataAPI: APIBase {
    /**
     Wallet Bitcoin Addresses
     
     - parameter walletID: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletcoinaddressWalletID(walletID walletID: String, completion: ((data: WalletAddressDataResponse?, error: ErrorType?) -> Void)) {
        v1userwalletcoinaddressWalletIDWithRequestBuilder(walletID: walletID).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Wallet Bitcoin Addresses
     - GET /v1/user/wallet/coin/address/{walletID}
     - Gets a List of Users Bitcoin Deposit Addresses.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "address" : "aeiou",
    "minConf" : 123,
    "netki" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "address" : "aeiou",
    "minConf" : 123,
    "netki" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter walletID: (path)  

     - returns: RequestBuilder<WalletAddressDataResponse> 
     */
    public class func v1userwalletcoinaddressWalletIDWithRequestBuilder(walletID walletID: String) -> RequestBuilder<WalletAddressDataResponse> {
        var path = "/v1/user/wallet/coin/address/{walletID}"
        path = path.stringByReplacingOccurrencesOfString("{walletID}", withString: "\(walletID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletAddressDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Confirmed Wallet Transactions
     
     - parameter walletID: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletcoindepositconfirmedWalletID(walletID walletID: String, completion: ((data: WalletAddressDataResponse?, error: ErrorType?) -> Void)) {
        v1userwalletcoindepositconfirmedWalletIDWithRequestBuilder(walletID: walletID).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Confirmed Wallet Transactions
     - GET /v1/user/wallet/coin/deposit/confirmed/{walletID}
     - Gets your Confirmed Wallet Bitcoin Transactions.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "address" : "aeiou",
    "minConf" : 123,
    "netki" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "address" : "aeiou",
    "minConf" : 123,
    "netki" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter walletID: (path)  

     - returns: RequestBuilder<WalletAddressDataResponse> 
     */
    public class func v1userwalletcoindepositconfirmedWalletIDWithRequestBuilder(walletID walletID: String) -> RequestBuilder<WalletAddressDataResponse> {
        var path = "/v1/user/wallet/coin/deposit/confirmed/{walletID}"
        path = path.stringByReplacingOccurrencesOfString("{walletID}", withString: "\(walletID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletAddressDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Confirmed Wallet Deposit
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletcoindepositconfirmedall(completion: ((data: WalletAddressDataResponse?, error: ErrorType?) -> Void)) {
        v1userwalletcoindepositconfirmedallWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Confirmed Wallet Deposit
     - GET /v1/user/wallet/coin/deposit/confirmed/all
     - Gets the total confirmed transactions across all accounts and addresses
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "address" : "aeiou",
    "minConf" : 123,
    "netki" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "address" : "aeiou",
    "minConf" : 123,
    "netki" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletAddressDataResponse> 
     */
    public class func v1userwalletcoindepositconfirmedallWithRequestBuilder() -> RequestBuilder<WalletAddressDataResponse> {
        let path = "/v1/user/wallet/coin/deposit/confirmed/all"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletAddressDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Unconfirmed Transactions in Wallet
     
     - parameter walletID: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletcoindepositunconfirmedWalletID(walletID walletID: String, completion: ((error: ErrorType?) -> Void)) {
        v1userwalletcoindepositunconfirmedWalletIDWithRequestBuilder(walletID: walletID).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Unconfirmed Transactions in Wallet
     - GET /v1/user/wallet/coin/deposit/unconfirmed/{walletID}
     - Gets the unconfirmed transactions on an account/ wallet.
     
     - parameter walletID: (path)  

     - returns: RequestBuilder<Void> 
     */
    public class func v1userwalletcoindepositunconfirmedWalletIDWithRequestBuilder(walletID walletID: String) -> RequestBuilder<Void> {
        var path = "/v1/user/wallet/coin/deposit/unconfirmed/{walletID}"
        path = path.stringByReplacingOccurrencesOfString("{walletID}", withString: "\(walletID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     All Unconfirmed Deposits
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletcoindepositunconfirmedall(completion: ((error: ErrorType?) -> Void)) {
        v1userwalletcoindepositunconfirmedallWithRequestBuilder().execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     All Unconfirmed Deposits
     - GET /v1/user/wallet/coin/deposit/unconfirmed/all
     - Gets the total unconfirmed transactions across all accounts and addresses

     - returns: RequestBuilder<Void> 
     */
    public class func v1userwalletcoindepositunconfirmedallWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/v1/user/wallet/coin/deposit/unconfirmed/all"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Wallet Details
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletcoinwallets(completion: ((data: WalletsDataResponse?, error: ErrorType?) -> Void)) {
        v1userwalletcoinwalletsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Wallet Details
     - GET /v1/user/wallet/coin/wallets
     - Gets a List of Users Wallets.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "coinBalance" : 123456789,
    "netki" : "aeiou",
    "name" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "coinBalance" : 123456789,
    "netki" : "aeiou",
    "name" : "aeiou",
    "time" : 123456789,
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletsDataResponse> 
     */
    public class func v1userwalletcoinwalletsWithRequestBuilder() -> RequestBuilder<WalletsDataResponse> {
        let path = "/v1/user/wallet/coin/wallets"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletsDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancelled Coin Withdrawals
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1walletwithdrawcancelled(completion: ((data: WalletCoinWithdrawDataResponse?, error: ErrorType?) -> Void)) {
        v1walletwithdrawcancelledWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancelled Coin Withdrawals
     - GET /v1/wallet/coin/withdraw/cancelled
     - Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletCoinWithdrawDataResponse> 
     */
    public class func v1walletwithdrawcancelledWithRequestBuilder() -> RequestBuilder<WalletCoinWithdrawDataResponse> {
        let path = "/v1/wallet/coin/withdraw/cancelled"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletCoinWithdrawDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Completed Coin Withdrawals
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1walletwithdrawcompleted(completion: ((data: WalletCoinWithdrawDataResponse?, error: ErrorType?) -> Void)) {
        v1walletwithdrawcompletedWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Completed Coin Withdrawals
     - GET /v1/wallet/coin/withdraw/completed
     - Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletCoinWithdrawDataResponse> 
     */
    public class func v1walletwithdrawcompletedWithRequestBuilder() -> RequestBuilder<WalletCoinWithdrawDataResponse> {
        let path = "/v1/wallet/coin/withdraw/completed"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletCoinWithdrawDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Unverified Coin Withdrawals
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1walletwithdrawunverified(completion: ((data: WalletCoinWithdrawDataResponse?, error: ErrorType?) -> Void)) {
        v1walletwithdrawunverifiedWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Unverified Coin Withdrawals
     - GET /v1/wallet/coin/withdraw/unverified
     - Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletCoinWithdrawDataResponse> 
     */
    public class func v1walletwithdrawunverifiedWithRequestBuilder() -> RequestBuilder<WalletCoinWithdrawDataResponse> {
        let path = "/v1/wallet/coin/withdraw/unverified"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletCoinWithdrawDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Verified Coin Withdrawals
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1walletwithdrawverified(completion: ((data: WalletCoinWithdrawDataResponse?, error: ErrorType?) -> Void)) {
        v1walletwithdrawverifiedWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Verified Coin Withdrawals
     - GET /v1/wallet/coin/withdraw/verified
     - Gets a List of Unverified Coin Withdrawals. The value and fees are in satoshis.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : [ {
    "walletID" : "aeiou",
    "sentTo" : "aeiou",
    "txID" : "aeiou",
    "withdrawID" : "aeiou",
    "message" : "aeiou",
    "timeDetails" : {
      "completedTime" : 123456789,
      "time" : 123456789,
      "verifiedTime" : 123456789
    },
    "satoshis" : 123456789
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletCoinWithdrawDataResponse> 
     */
    public class func v1walletwithdrawverifiedWithRequestBuilder() -> RequestBuilder<WalletCoinWithdrawDataResponse> {
        let path = "/v1/wallet/coin/withdraw/verified"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletCoinWithdrawDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
