//
// AccountDataAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AccountDataAPI: APIBase {
    /**
     Exchange Bank Summary
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1exchangebanksummary(completion: ((data: BankSummaryDataResponse?, error: ErrorType?) -> Void)) {
        v1exchangebanksummaryWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Exchange Bank Summary
     - GET /v1/user/exchange/bank/summary
     - Gets a Summary of Exchange Bank Data and Balances.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "coinFeePercentage" : 1.3579000000000001069366817318950779736042022705078125,
    "tradeNetkiAddress" : "aeiou",
    "availableFiatBalance" : 123456789,
    "totalFiatBalance" : 123456789,
    "fiatFeePercentage" : 1.3579000000000001069366817318950779736042022705078125,
    "pendingFiatBalance" : 123456789,
    "availableCoinBalance" : 123456789,
    "pendingCoinBalance" : 123456789,
    "bankLinkStatus" : "aeiou",
    "totalCoinBalance" : 123456789,
    "hasTradeNetki" : true,
    "tradeNetkiName" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "coinFeePercentage" : 1.3579000000000001069366817318950779736042022705078125,
    "tradeNetkiAddress" : "aeiou",
    "availableFiatBalance" : 123456789,
    "totalFiatBalance" : 123456789,
    "fiatFeePercentage" : 1.3579000000000001069366817318950779736042022705078125,
    "pendingFiatBalance" : 123456789,
    "availableCoinBalance" : 123456789,
    "pendingCoinBalance" : 123456789,
    "bankLinkStatus" : "aeiou",
    "totalCoinBalance" : 123456789,
    "hasTradeNetki" : true,
    "tradeNetkiName" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<BankSummaryDataResponse> 
     */
    public class func v1exchangebanksummaryWithRequestBuilder() -> RequestBuilder<BankSummaryDataResponse> {
        let path = "/v1/user/exchange/bank/summary"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<BankSummaryDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Users Coin Fee Percentage
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1exchangeusercoinfee(completion: ((data: DoubleDataResponse?, error: ErrorType?) -> Void)) {
        v1exchangeusercoinfeeWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Users Coin Fee Percentage
     - GET /v1/user/exchange/coin/fee
     - Returns the users coin fee percentage. The response is in percentage.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "percent" : 1.3579000000000001069366817318950779736042022705078125
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "percent" : 1.3579000000000001069366817318950779736042022705078125
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<DoubleDataResponse> 
     */
    public class func v1exchangeusercoinfeeWithRequestBuilder() -> RequestBuilder<DoubleDataResponse> {
        let path = "/v1/user/exchange/coin/fee"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DoubleDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Users Fiat Fee Percentage
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1exchangeuserfiatfee(completion: ((data: DoubleDataResponse?, error: ErrorType?) -> Void)) {
        v1exchangeuserfiatfeeWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Users Fiat Fee Percentage
     - GET /v1/user/exchange/fiat/fee
     - Returns the users fiat fee percentage. The response is in percentage.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "percent" : 1.3579000000000001069366817318950779736042022705078125
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "percent" : 1.3579000000000001069366817318950779736042022705078125
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<DoubleDataResponse> 
     */
    public class func v1exchangeuserfiatfeeWithRequestBuilder() -> RequestBuilder<DoubleDataResponse> {
        let path = "/v1/user/exchange/fiat/fee"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DoubleDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Coinsecure.me Netki Lookup
     
     - parameter netkiName: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1netkisearchNetkiName(netkiName netkiName: String, completion: ((data: DoubleDataResponse?, error: ErrorType?) -> Void)) {
        v1netkisearchNetkiNameWithRequestBuilder(netkiName: netkiName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Coinsecure.me Netki Lookup
     - GET /v1/netki/search/{netkiName}
     - Searches for a coinsecure.me Netki Wallet Name and responds with an Address model output.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "percent" : 1.3579000000000001069366817318950779736042022705078125
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "percent" : 1.3579000000000001069366817318950779736042022705078125
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter netkiName: (path)  

     - returns: RequestBuilder<DoubleDataResponse> 
     */
    public class func v1netkisearchNetkiNameWithRequestBuilder(netkiName netkiName: String) -> RequestBuilder<DoubleDataResponse> {
        var path = "/v1/netki/search/{netkiName}"
        path = path.stringByReplacingOccurrencesOfString("{netkiName}", withString: "\(netkiName)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DoubleDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets KYC Status Details
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangekycs(completion: ((data: KYCDataResponse?, error: ErrorType?) -> Void)) {
        v1userexchangekycsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets KYC Status Details
     - GET /v1/user/exchange/kycs
     - Gets Users KYC Status Details.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "firstName" : "aeiou",
    "lastName" : "aeiou",
    "userType" : "aeiou",
    "kycID" : "aeiou",
    "timeDetails" : {
      "updateTime" : 123456789,
      "time" : 123456789
    },
    "status" : "aeiou",
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "firstName" : "aeiou",
    "lastName" : "aeiou",
    "userType" : "aeiou",
    "kycID" : "aeiou",
    "timeDetails" : {
      "updateTime" : 123456789,
      "time" : 123456789
    },
    "status" : "aeiou",
    "info" : "aeiou"
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<KYCDataResponse> 
     */
    public class func v1userexchangekycsWithRequestBuilder() -> RequestBuilder<KYCDataResponse> {
        let path = "/v1/user/exchange/kycs"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<KYCDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Users Paid Fiat Referrals
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangereferralcoinpaid(completion: ((data: SuccCoinRefDataResponse?, error: ErrorType?) -> Void)) {
        v1userexchangereferralcoinpaidWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Users Paid Fiat Referrals
     - GET /v1/user/exchange/referral/coin/paid
     - Returns the Users Paid Coin Referrals.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "amtPaid" : 123456789,
    "depositID" : "aeiou",
    "orderID" : "aeiou",
    "time" : 123456789,
    "refID" : "aeiou",
    "newUserIDMasked" : "aeiou",
    "tradeID" : "aeiou",
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "amtPaid" : 123456789,
    "depositID" : "aeiou",
    "orderID" : "aeiou",
    "time" : 123456789,
    "refID" : "aeiou",
    "newUserIDMasked" : "aeiou",
    "tradeID" : "aeiou",
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<SuccCoinRefDataResponse> 
     */
    public class func v1userexchangereferralcoinpaidWithRequestBuilder() -> RequestBuilder<SuccCoinRefDataResponse> {
        let path = "/v1/user/exchange/referral/coin/paid"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccCoinRefDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets Users Successful Referral Links
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangereferralcoinsuccessful(completion: ((data: SuccRefDataResponse?, error: ErrorType?) -> Void)) {
        v1userexchangereferralcoinsuccessfulWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets Users Successful Referral Links
     - GET /v1/user/exchange/referral/coin/successful
     - Gets Users Successful Referral Links that can be used during signup.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "emailVerified" : true,
    "btcEarned" : 123456789,
    "fiatEarned" : 123456789,
    "time" : 123456789,
    "refID" : "aeiou",
    "kycComplete" : true,
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "emailVerified" : true,
    "btcEarned" : 123456789,
    "fiatEarned" : 123456789,
    "time" : 123456789,
    "refID" : "aeiou",
    "kycComplete" : true,
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<SuccRefDataResponse> 
     */
    public class func v1userexchangereferralcoinsuccessfulWithRequestBuilder() -> RequestBuilder<SuccRefDataResponse> {
        let path = "/v1/user/exchange/referral/coin/successful"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccRefDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Users Paid Fiat Referrals
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangereferralfiatpaid(completion: ((data: SuccCoinRefDataResponse?, error: ErrorType?) -> Void)) {
        v1userexchangereferralfiatpaidWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Users Paid Fiat Referrals
     - GET /v1/user/exchange/referral/fiat/paid
     - Returns the Users Paid Fiat Referrals.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "amtPaid" : 123456789,
    "depositID" : "aeiou",
    "orderID" : "aeiou",
    "time" : 123456789,
    "refID" : "aeiou",
    "newUserIDMasked" : "aeiou",
    "tradeID" : "aeiou",
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "amtPaid" : 123456789,
    "depositID" : "aeiou",
    "orderID" : "aeiou",
    "time" : 123456789,
    "refID" : "aeiou",
    "newUserIDMasked" : "aeiou",
    "tradeID" : "aeiou",
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<SuccCoinRefDataResponse> 
     */
    public class func v1userexchangereferralfiatpaidWithRequestBuilder() -> RequestBuilder<SuccCoinRefDataResponse> {
        let path = "/v1/user/exchange/referral/fiat/paid"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccCoinRefDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets Users Referral Links
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangereferrals(completion: ((data: AllRefDataResponse?, error: ErrorType?) -> Void)) {
        v1userexchangereferralsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets Users Referral Links
     - GET /v1/user/exchange/referrals
     - Gets Users Referral Links that can be used during signup.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "time" : 123456789,
    "refID" : "aeiou",
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : [ {
    "time" : 123456789,
    "refID" : "aeiou",
    "refPercent" : 1.3579000000000001069366817318950779736042022705078125
  } ],
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<AllRefDataResponse> 
     */
    public class func v1userexchangereferralsWithRequestBuilder() -> RequestBuilder<AllRefDataResponse> {
        let path = "/v1/user/exchange/referrals"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AllRefDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Exchange Trade Summary
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangetradesummary(completion: ((data: TradeSummaryDataResponse?, error: ErrorType?) -> Void)) {
        v1userexchangetradesummaryWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Exchange Trade Summary
     - GET /v1/user/exchange/trade/summary
     - Gets a Summary of Exchange Trade Data.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "completedAsksCount" : 123456789,
    "pendingAsksCount" : 123456789,
    "completedAsksSum" : 123456789,
    "completedBidsCount" : 123456789,
    "pendingBidsCount" : 123456789,
    "completedBidsSum" : 123456789
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "completedAsksCount" : 123456789,
    "pendingAsksCount" : 123456789,
    "completedAsksSum" : 123456789,
    "completedBidsCount" : 123456789,
    "pendingBidsCount" : 123456789,
    "completedBidsSum" : 123456789
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<TradeSummaryDataResponse> 
     */
    public class func v1userexchangetradesummaryWithRequestBuilder() -> RequestBuilder<TradeSummaryDataResponse> {
        let path = "/v1/user/exchange/trade/summary"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TradeSummaryDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Login Token Email
     
     - parameter token: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userlogintokenToken(token token: String, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userlogintokenTokenWithRequestBuilder(token: token).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Login Token Email
     - GET /v1/user/login/token/{token}
     - Retrieves details of a Login Token
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter token: (path)  

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userlogintokenTokenWithRequestBuilder(token token: String) -> RequestBuilder<SuccessResult> {
        var path = "/v1/user/login/token/{token}"
        path = path.stringByReplacingOccurrencesOfString("{token}", withString: "\(token)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Exchange Bank Summary
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1usersummary(completion: ((data: UserSummaryDataResponse?, error: ErrorType?) -> Void)) {
        v1usersummaryWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Exchange Bank Summary
     - GET /v1/user/summary
     - Gets a Summary of Exchange Bank Data and Balances.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "isDisabledAccount" : true,
    "tradeReady" : "aeiou",
    "kycStatus" : "aeiou",
    "faSecure" : "aeiou",
    "hasPhone" : "aeiou",
    "bankLinkStatus" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "isDisabledAccount" : true,
    "tradeReady" : "aeiou",
    "kycStatus" : "aeiou",
    "faSecure" : "aeiou",
    "hasPhone" : "aeiou",
    "bankLinkStatus" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<UserSummaryDataResponse> 
     */
    public class func v1usersummaryWithRequestBuilder() -> RequestBuilder<UserSummaryDataResponse> {
        let path = "/v1/user/summary"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<UserSummaryDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Exchange Bank Summary
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userwalletsummary(completion: ((data: WalletSummaryDataResponse?, error: ErrorType?) -> Void)) {
        v1userwalletsummaryWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Exchange Bank Summary
     - GET /v1/user/wallet/summary
     - Gets a Summary of Exchange Bank Data and Balances.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "hasWalletNetki" : true,
    "walletNetki" : "aeiou",
    "walletNetkiWalletId" : "aeiou",
    "walletConfirmedBalance" : 123456789,
    "walletUncofirmedBalance" : 123456789,
    "walletNetkiAddress" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+00:00",
  "message" : {
    "hasWalletNetki" : true,
    "walletNetki" : "aeiou",
    "walletNetkiWalletId" : "aeiou",
    "walletConfirmedBalance" : 123456789,
    "walletUncofirmedBalance" : 123456789,
    "walletNetkiAddress" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<WalletSummaryDataResponse> 
     */
    public class func v1userwalletsummaryWithRequestBuilder() -> RequestBuilder<WalletSummaryDataResponse> {
        let path = "/v1/user/wallet/summary"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<WalletSummaryDataResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
