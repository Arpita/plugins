//
// ExchangeBankActionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ExchangeBankActionsAPI: APIBase {
    /**
     Initiate Bitcoin Withdrawal
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankcoinwithdrawinitiate(body body: SendCoin, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankcoinwithdrawinitiateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Initiate Bitcoin Withdrawal
     - POST /v1/user/exchange/bank/coin/withdraw/initiate
     - The code for verifying the withdrawal can be called from /v1/exchange/bank/coin/withdrawVerifycode. May require a 2FA code if 2FA is enabled on the account. A mail is sent to the users email requesting confirmation of the withdrawal. This confirmation mail can be disabled on the Coinsecure Profile page.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankcoinwithdrawinitiateWithRequestBuilder(body body: SendCoin) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/coin/withdraw/initiate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets a Verification Code.
     
     - parameter body: (body) You can get unverified withdraw ID&#39;s from /v1/user/exchange/bank/coin/withdraw/unverified 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankcoinwithdrawnewVerifycode(body body: WithdrawID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankcoinwithdrawnewVerifycodeWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Verification Code.
     - POST /v1/user/exchange/bank/coin/withdraw/newVerifycode
     - Gets Coin Unverified Withdraws Codes to call and apply on /v1/user/exchange/bank/coin/withdraw/verify.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get unverified withdraw ID&#39;s from /v1/user/exchange/bank/coin/withdraw/unverified 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankcoinwithdrawnewVerifycodeWithRequestBuilder(body body: WithdrawID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/coin/withdraw/newVerifycode"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancel Bitcoin Withdrawal
     
     - parameter body: (body) You can get the WithdrawID from /v1/user/exchange/bank/coin/withdraw/unverified. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankcoinwithdrawunverifiedcancel(body body: WithdrawID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankcoinwithdrawunverifiedcancelWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancel Bitcoin Withdrawal
     - DELETE /v1/user/exchange/bank/coin/withdraw/unverified/cancel
     - Cancels an unverified withdrawal. You can get the WithdrawID from /v1/user/exchange/bank/coin/withdraw/unverified.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get the WithdrawID from /v1/user/exchange/bank/coin/withdraw/unverified. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankcoinwithdrawunverifiedcancelWithRequestBuilder(body body: WithdrawID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/coin/withdraw/unverified/cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Verify Bitcoin Withdrawal
     
     - parameter body: (body) You can get the code from /v1/user/exchange/bank/coin/withdraw/newVerifycode. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankcoinwithdrawverify(body body: Code, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankcoinwithdrawverifyWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Verify Bitcoin Withdrawal
     - PUT /v1/user/exchange/bank/coin/withdraw/verify
     - Verifies an unverified withdrawal. You can get the code from /v1/user/exchange/bank/coin/withdraw/newVerifycode.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get the code from /v1/user/exchange/bank/coin/withdraw/newVerifycode. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankcoinwithdrawverifyWithRequestBuilder(body body: Code) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/coin/withdraw/verify"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     New Bank Link
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiataccountnew(body body: NewBankForm, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiataccountnewWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     New Bank Link
     - PUT /v1/user/exchange/bank/fiat/account/new
     - Submits a New Bank Link on KYC Verified Accounts.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiataccountnewWithRequestBuilder(body body: NewBankForm) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/account/new"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancel Unverified Exchange Fiat Deposit
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiatdepositcancel(body body: DepositID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiatdepositcancelWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancel Unverified Exchange Fiat Deposit
     - DELETE /v1/user/exchange/bank/fiat/deposit/cancel
     - Cancels an unverified Exchange Fiat Deposit.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiatdepositcancelWithRequestBuilder(body body: DepositID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/deposit/cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     New Exchange Fiat Deposit
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiatdepositnew(body body: NewFiatBankDeposit, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiatdepositnewWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     New Exchange Fiat Deposit
     - PUT /v1/user/exchange/bank/fiat/deposit/new
     - Submits an unverified fiat deposit. No action will occur unless user cancels or bank notifies us of the payment.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiatdepositnewWithRequestBuilder(body body: NewFiatBankDeposit) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/deposit/new"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Initiate Fiat Withdrawal
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiatwithdrawinitiate(body body: WithdrawFiat, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiatwithdrawinitiateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Initiate Fiat Withdrawal
     - POST /v1/user/exchange/bank/fiat/withdraw/initiate
     - The code for verifying the withdrawal can be called from /v1/user/exchange/bank/fiat/withdraw/newVerifycode. May require a 2FA code if 2FA is enabled on the account. A mail is sent to the users email requesting confirmation of the withdrawal. This confirmation mail can be disabled on the Coinsecure Profile page.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiatwithdrawinitiateWithRequestBuilder(body body: WithdrawFiat) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/withdraw/initiate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets a Fiat Verification Code.
     
     - parameter body: (body) You can get unverified withdraw ID&#39;s from /v1/user/exchange/bank/fiat/withdraw/unverified 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiatwithdrawnewVerifycode(body body: WithdrawID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiatwithdrawnewVerifycodeWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Fiat Verification Code.
     - POST /v1/user/exchange/bank/fiat/withdraw/newVerifycode
     - Gets Fiat Unverified Withdraws Codes to call and apply on /v1/user/exchange/bank/fiat/withdraw/verify.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get unverified withdraw ID&#39;s from /v1/user/exchange/bank/fiat/withdraw/unverified 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiatwithdrawnewVerifycodeWithRequestBuilder(body body: WithdrawID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/withdraw/newVerifycode"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Cancel Fiat Withdrawal
     
     - parameter body: (body) You can get the code from /v1/user/exchange/bank/fiat/withdraw/unverified. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiatwithdrawunverifiedcancel(body body: WithdrawID, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiatwithdrawunverifiedcancelWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Cancel Fiat Withdrawal
     - DELETE /v1/user/exchange/bank/fiat/withdraw/unverified/cancel
     - Cancels an unverified withdrawal. You can get the WithdrawID from /v1/user/exchange/bank/fiat/withdraw/unverified.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get the code from /v1/user/exchange/bank/fiat/withdraw/unverified. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiatwithdrawunverifiedcancelWithRequestBuilder(body body: WithdrawID) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/withdraw/unverified/cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Verify Fiat Withdrawal
     
     - parameter body: (body) You can get the code from /v1/user/exchange/bank/fiat/withdraw/newVerifycode 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangebankfiatwithdrawverify(body body: Code, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangebankfiatwithdrawverifyWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Verify Fiat Withdrawal
     - PUT /v1/user/exchange/bank/fiat/withdraw/verify
     - Verifies an unverified withdrawal. You can get the code from /v1/user/exchange/bank/fiat/withdraw/newVerifycode.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get the code from /v1/user/exchange/bank/fiat/withdraw/newVerifycode 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangebankfiatwithdrawverifyWithRequestBuilder(body body: Code) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/bank/fiat/withdraw/verify"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
