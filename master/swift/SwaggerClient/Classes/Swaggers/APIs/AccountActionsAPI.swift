//
// AccountActionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AccountActionsAPI: APIBase {
    /**
     Creates a Login Instance and returns an API Key.
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1login(body body: LoginFormNew, completion: ((data: StandardLoginResultData?, error: ErrorType?) -> Void)) {
        v1loginWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Login Instance and returns an API Key.
     - POST /v1/login
     - Creates a Login Instance and returns an API Key
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : {
    "keyType" : "aeiou",
    "info" : "aeiou",
    "keyNeeded" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : {
    "keyType" : "aeiou",
    "info" : "aeiou",
    "keyNeeded" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<StandardLoginResultData> 
     */
    public class func v1loginWithRequestBuilder(body body: LoginFormNew) -> RequestBuilder<StandardLoginResultData> {
        let path = "/v1/login"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<StandardLoginResultData>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Initiate Login
     
     - parameter body: (body) Enter a valid Login ID. This method will send an email with a token to be used for login. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1logininitiate(body body: LoginId, completion: ((data: StandardInitiateLoginResultData?, error: ErrorType?) -> Void)) {
        v1logininitiateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Initiate Login
     - POST /v1/login/initiate
     - Sends an Email with a Verification Link.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : {
    "validTill" : 123456789,
    "mfa" : "aeiou",
    "info" : "aeiou",
    "token" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : {
    "validTill" : 123456789,
    "mfa" : "aeiou",
    "info" : "aeiou",
    "token" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Enter a valid Login ID. This method will send an email with a token to be used for login. 

     - returns: RequestBuilder<StandardInitiateLoginResultData> 
     */
    public class func v1logininitiateWithRequestBuilder(body body: LoginId) -> RequestBuilder<StandardInitiateLoginResultData> {
        let path = "/v1/login/initiate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<StandardInitiateLoginResultData>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Sends an email with a password reset token
     
     - parameter body: (body) Enter a valid and registered Email ID. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1loginpasswordforgot(body body: Email, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1loginpasswordforgotWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Sends an email with a password reset token
     - POST /v1/login/password/forgot
     - Sends an email with a password reset token
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Enter a valid and registered Email ID. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1loginpasswordforgotWithRequestBuilder(body body: Email) -> RequestBuilder<SuccessResult> {
        let path = "/v1/login/password/forgot"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Creates a new Unverified Account.
     
     - parameter body: (body) Please send the form with valid inputs. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1signup(body body: SignupForm, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1signupWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a new Unverified Account.
     - POST /v1/signup
     - Creates a new Unverified Account.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please send the form with valid inputs. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1signupWithRequestBuilder(body body: SignupForm) -> RequestBuilder<SuccessResult> {
        let path = "/v1/signup"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Send OTP for Bank Link
     
     - parameter number: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userbankotpNumber(number number: String, completion: ((data: StandardInitiateLoginResultData?, error: ErrorType?) -> Void)) {
        v1userbankotpNumberWithRequestBuilder(number: number).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Send OTP for Bank Link
     - GET /v1/user/bank/otp/{number}
     - Send OTP for an additional Bank Link.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : {
    "validTill" : 123456789,
    "mfa" : "aeiou",
    "info" : "aeiou",
    "token" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : {
    "validTill" : 123456789,
    "mfa" : "aeiou",
    "info" : "aeiou",
    "token" : "aeiou"
  },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter number: (path)  

     - returns: RequestBuilder<StandardInitiateLoginResultData> 
     */
    public class func v1userbankotpNumberWithRequestBuilder(number number: String) -> RequestBuilder<StandardInitiateLoginResultData> {
        var path = "/v1/user/bank/otp/{number}"
        path = path.stringByReplacingOccurrencesOfString("{number}", withString: "\(number)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<StandardInitiateLoginResultData>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Submits a New Bank Link and initial KYC Documents.
     
     - parameter panNumber: (form) Please enter your Pan Card Number 
     - parameter acctNick: (form) Please enter an Account NickName 
     - parameter name: (form) Please enter your Name as it appears on your Bank account. 
     - parameter ban: (form) Please enter your Bank account number. 
     - parameter ifsc: (form) Please enter your IFSC Code. 
     - parameter acctType: (form) Please enter your Coinsecure account type. Allowable Values are Personal or Company. 
     - parameter banType: (form) Please enter your Bank account type. Allowable Values are Savings or Current. 
     - parameter phone: (form) Please enter your Valid Phone Number. 
     - parameter otp: (form) Please enter your OTP from SMS. The code can be requested from /v1/user/bank/otp/:number. 
     - parameter file: (form) Enter a valid image, pdf or zip file under 5 MB in size. 
     - parameter message: (form) Please enter an optional message if needed. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userexchangekyc(panNumber panNumber: String, acctNick: String, name: String, ban: String, ifsc: String, acctType: String, banType: String, phone: String, otp: String, file: NSURL, message: String? = nil, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userexchangekycWithRequestBuilder(panNumber: panNumber, acctNick: acctNick, name: name, ban: ban, ifsc: ifsc, acctType: acctType, banType: banType, phone: phone, otp: otp, file: file, message: message).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Submits a New Bank Link and initial KYC Documents.
     - PUT /v1/user/exchange/kyc
     - Submits a New Bank Link and initial KYC Documents.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter panNumber: (form) Please enter your Pan Card Number 
     - parameter acctNick: (form) Please enter an Account NickName 
     - parameter name: (form) Please enter your Name as it appears on your Bank account. 
     - parameter ban: (form) Please enter your Bank account number. 
     - parameter ifsc: (form) Please enter your IFSC Code. 
     - parameter acctType: (form) Please enter your Coinsecure account type. Allowable Values are Personal or Company. 
     - parameter banType: (form) Please enter your Bank account type. Allowable Values are Savings or Current. 
     - parameter phone: (form) Please enter your Valid Phone Number. 
     - parameter otp: (form) Please enter your OTP from SMS. The code can be requested from /v1/user/bank/otp/:number. 
     - parameter file: (form) Enter a valid image, pdf or zip file under 5 MB in size. 
     - parameter message: (form) Please enter an optional message if needed. (optional)

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userexchangekycWithRequestBuilder(panNumber panNumber: String, acctNick: String, name: String, ban: String, ifsc: String, acctType: String, banType: String, phone: String, otp: String, file: NSURL, message: String? = nil) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/exchange/kyc"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "panNumber": panNumber,
            "acctNick": acctNick,
            "name": name,
            "ban": ban,
            "ifsc": ifsc,
            "acctType": acctType,
            "message": message,
            "banType": banType,
            "phone": phone,
            "otp": otp,
            "file": file
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Delete GCM Code
     
     - parameter code: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1usergcmCode(code code: String, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1usergcmCodeWithRequestBuilder(code: code).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete GCM Code
     - DELETE /v1/user/gcm/{code}
     - Delete GCM Code and associated API Key.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter code: (path)  

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1usergcmCodeWithRequestBuilder(code code: String) -> RequestBuilder<SuccessResult> {
        var path = "/v1/user/gcm/{code}"
        path = path.stringByReplacingOccurrencesOfString("{code}", withString: "\(code)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Send OTP for KYC Link
     
     - parameter number: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userkycotpNumber(number number: String, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userkycotpNumberWithRequestBuilder(number: number).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Send OTP for KYC Link
     - GET /v1/user/kyc/otp/{number}
     - Send OTP for KYC Link.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter number: (path)  

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userkycotpNumberWithRequestBuilder(number number: String) -> RequestBuilder<SuccessResult> {
        var path = "/v1/user/kyc/otp/{number}"
        path = path.stringByReplacingOccurrencesOfString("{number}", withString: "\(number)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Logout User
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userlogout(completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userlogoutWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Logout User
     - DELETE /v1/user/logout
     - Logs out user and Deletes the api key and associated session data.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userlogoutWithRequestBuilder() -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/logout"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create Neki Wallet Name
     
     - parameter body: (body) Enter a valid Netki name and Bitcoin address from Wallet or Exchange. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1usernetkicreate(body body: NetkiNameAddress, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1usernetkicreateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create Neki Wallet Name
     - PUT /v1/user/netki/create
     - Creates a new Netki Wallet Name.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Enter a valid Netki name and Bitcoin address from Wallet or Exchange. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1usernetkicreateWithRequestBuilder(body body: NetkiNameAddress) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/netki/create"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update Netki Address
     
     - parameter body: (body) Enter a valid Bitcoin address from Wallet or Exchange to update the wallet name. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1usernetkiupdate(body body: Address, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1usernetkiupdateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update Netki Address
     - PATCH /v1/user/netki/update
     - Updates the address on an existing wallet name.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Enter a valid Bitcoin address from Wallet or Exchange to update the wallet name. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1usernetkiupdateWithRequestBuilder(body body: Address) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/netki/update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete Profile Image
     
     - parameter body: (body) Please enter a valid Netki name associated with your prfile Image. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userprofileimagedelete(body body: NetkiName, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userprofileimagedeleteWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete Profile Image
     - POST /v1/user/contact
     - Deletes a profile Image.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) Please enter a valid Netki name associated with your prfile Image. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userprofileimagedeleteWithRequestBuilder(body body: NetkiName) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/contact"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update Profile Image
     
     - parameter netkiName: (form) Please enter your Netki Wallet Name. 
     - parameter isPublic: (form) Please enter if this image can be public. 
     - parameter file: (form) Enter a valid image, pdf or zip file under 5 MB in size. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userprofileimageupdate(netkiName netkiName: String, isPublic: Bool, file: NSURL, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userprofileimageupdateWithRequestBuilder(netkiName: netkiName, isPublic: isPublic, file: file).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update Profile Image
     - PATCH /v1/user/profile/image/update
     - Updates Profile Image and allows public or private options for netki profile page.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter netkiName: (form) Please enter your Netki Wallet Name. 
     - parameter isPublic: (form) Please enter if this image can be public. 
     - parameter file: (form) Enter a valid image, pdf or zip file under 5 MB in size. 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userprofileimageupdateWithRequestBuilder(netkiName netkiName: String, isPublic: Bool, file: NSURL) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/profile/image/update"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "netkiName": netkiName,
            "isPublic": isPublic,
            "file": file
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     New Profile Phone
     
     - parameter body: (body) You can get an otp to update your profile phone number from /v1/user/profile/phone/otp/:number 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userprofilephone(body body: NumberOtp, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userprofilephoneWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     New Profile Phone
     - PUT /v1/user/profile/phone/new
     - Set a New Profile Phone Number.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter body: (body) You can get an otp to update your profile phone number from /v1/user/profile/phone/otp/:number 

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userprofilephoneWithRequestBuilder(body body: NumberOtp) -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/profile/phone/new"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete Profile Phone Number
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userprofilephoneNumber(completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userprofilephoneNumberWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete Profile Phone Number
     - DELETE /v1/user/profile/phone/delete
     - Delete Profile Phone Number.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userprofilephoneNumberWithRequestBuilder() -> RequestBuilder<SuccessResult> {
        let path = "/v1/user/profile/phone/delete"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Send OTP for Profile Phone
     
     - parameter number: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v1userprofilephoneotpNumber(number number: String, completion: ((data: SuccessResult?, error: ErrorType?) -> Void)) {
        v1userprofilephoneotpNumberWithRequestBuilder(number: number).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Send OTP for Profile Phone
     - GET /v1/user/profile/phone/otp/{number}
     - Send OTP for Profile Phone addition or updation.
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     - examples: [{contentType=application/json, example={
  "method" : "aeiou",
  "success" : true,
  "time" : "2000-01-23T04:56:07.000+0000",
  "message" : { },
  "title" : "aeiou"
}}, {contentType=application/xml, example=<null>
  <success>true</success>
  <method>string</method>
  <title>string</title>
  <time>2000-01-23T04:56:07.000Z</time>
</null>}]
     
     - parameter number: (path)  

     - returns: RequestBuilder<SuccessResult> 
     */
    public class func v1userprofilephoneotpNumberWithRequestBuilder(number number: String) -> RequestBuilder<SuccessResult> {
        var path = "/v1/user/profile/phone/otp/{number}"
        path = path.stringByReplacingOccurrencesOfString("{number}", withString: "\(number)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
