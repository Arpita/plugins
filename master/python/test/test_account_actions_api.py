# coding: utf-8

"""
    Coinsecure Api Documentation

    To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.

    OpenAPI spec version: beta
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.account_actions_api import AccountActionsApi


class TestAccountActionsApi(unittest.TestCase):
    """ AccountActionsApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.account_actions_api.AccountActionsApi()

    def tearDown(self):
        pass

    def test_v1login(self):
        """
        Test case for v1login

        Creates a Login Instance and returns an API Key.
        """
        pass

    def test_v1logininitiate(self):
        """
        Test case for v1logininitiate

        Initiate Login
        """
        pass

    def test_v1loginpasswordforgot(self):
        """
        Test case for v1loginpasswordforgot

        Sends an email with a password reset token
        """
        pass

    def test_v1signup(self):
        """
        Test case for v1signup

        Creates a new Unverified Account.
        """
        pass

    def test_v1userbankotp_number(self):
        """
        Test case for v1userbankotp_number

        Send OTP for Bank Link
        """
        pass

    def test_v1userexchangekyc(self):
        """
        Test case for v1userexchangekyc

        Submits a New Bank Link and initial KYC Documents.
        """
        pass

    def test_v1usergcm_code(self):
        """
        Test case for v1usergcm_code

        Delete GCM Code
        """
        pass

    def test_v1userkycotp_number(self):
        """
        Test case for v1userkycotp_number

        Send OTP for KYC Link
        """
        pass

    def test_v1userlogout(self):
        """
        Test case for v1userlogout

        Logout User
        """
        pass

    def test_v1usernetkicreate(self):
        """
        Test case for v1usernetkicreate

        Create Neki Wallet Name
        """
        pass

    def test_v1usernetkiupdate(self):
        """
        Test case for v1usernetkiupdate

        Update Netki Address
        """
        pass

    def test_v1userprofileimagedelete_netki_name(self):
        """
        Test case for v1userprofileimagedelete_netki_name

        Delete Profile Image
        """
        pass

    def test_v1userprofileimageupdate(self):
        """
        Test case for v1userprofileimageupdate

        Update Profile Image
        """
        pass

    def test_v1userprofilephone(self):
        """
        Test case for v1userprofilephone

        New Profile Phone
        """
        pass

    def test_v1userprofilephone_number(self):
        """
        Test case for v1userprofilephone_number

        Delete Profile Phone Number
        """
        pass

    def test_v1userprofilephoneotp_number(self):
        """
        Test case for v1userprofilephoneotp_number

        Send OTP for Profile Phone
        """
        pass


if __name__ == '__main__':
    unittest.main()
