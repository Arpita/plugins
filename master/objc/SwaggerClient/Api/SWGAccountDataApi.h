#import <Foundation/Foundation.h>
#import "SWGFailResult.h"
#import "SWGBankSummaryDataResponse.h"
#import "SWGDoubleDataResponse.h"
#import "SWGKYCDataResponse.h"
#import "SWGSuccCoinRefDataResponse.h"
#import "SWGSuccRefDataResponse.h"
#import "SWGAllRefDataResponse.h"
#import "SWGTradeSummaryDataResponse.h"
#import "SWGSuccessResult.h"
#import "SWGUserSummaryDataResponse.h"
#import "SWGWalletSummaryDataResponse.h"
#import "SWGApi.h"

/**
* Coinsecure Api Documentation
* To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
*
* OpenAPI spec version: 1.0b
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGAccountDataApi: NSObject <SWGApi>

extern NSString* kSWGAccountDataApiErrorDomain;
extern NSInteger kSWGAccountDataApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Exchange Bank Summary
/// Gets a Summary of Exchange Bank Data and Balances.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGBankSummaryDataResponse*
-(NSNumber*) v1exchangebanksummaryWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGBankSummaryDataResponse* output, NSError* error)) handler;


/// Users Coin Fee Percentage
/// Returns the users coin fee percentage. The response is in percentage.
///
/// @param authorization API object to be added (optional)
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGDoubleDataResponse*
-(NSNumber*) v1exchangeusercoinfeeWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGDoubleDataResponse* output, NSError* error)) handler;


/// Users Fiat Fee Percentage
/// Returns the users fiat fee percentage. The response is in percentage.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGDoubleDataResponse*
-(NSNumber*) v1exchangeuserfiatfeeWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGDoubleDataResponse* output, NSError* error)) handler;


/// Coinsecure.me Netki Lookup
/// Searches for a coinsecure.me Netki Wallet Name and responds with an Address model output.
///
/// @param netkiName 
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGDoubleDataResponse*
-(NSNumber*) v1netkisearchNetkiNameWithNetkiName: (NSString*) netkiName
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGDoubleDataResponse* output, NSError* error)) handler;


/// Gets KYC Status Details
/// Gets Users KYC Status Details.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGKYCDataResponse*
-(NSNumber*) v1userexchangekycsWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGKYCDataResponse* output, NSError* error)) handler;


/// Users Paid Fiat Referrals
/// Returns the Users Paid Coin Referrals.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccCoinRefDataResponse*
-(NSNumber*) v1userexchangereferralcoinpaidWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccCoinRefDataResponse* output, NSError* error)) handler;


/// Gets Users Successful Referral Links
/// Gets Users Successful Referral Links that can be used during signup.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccRefDataResponse*
-(NSNumber*) v1userexchangereferralcoinsuccessfulWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccRefDataResponse* output, NSError* error)) handler;


/// Users Paid Fiat Referrals
/// Returns the Users Paid Fiat Referrals.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccCoinRefDataResponse*
-(NSNumber*) v1userexchangereferralfiatpaidWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccCoinRefDataResponse* output, NSError* error)) handler;


/// Gets Users Referral Links
/// Gets Users Referral Links that can be used during signup.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGAllRefDataResponse*
-(NSNumber*) v1userexchangereferralsWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGAllRefDataResponse* output, NSError* error)) handler;


/// Exchange Trade Summary
/// Gets a Summary of Exchange Trade Data.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGTradeSummaryDataResponse*
-(NSNumber*) v1userexchangetradesummaryWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGTradeSummaryDataResponse* output, NSError* error)) handler;


/// Login Token Email
/// Retrieves details of a Login Token
///
/// @param token 
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccessResult*
-(NSNumber*) v1userlogintokenTokenWithToken: (NSString*) token
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccessResult* output, NSError* error)) handler;


/// Exchange Bank Summary
/// Gets a Summary of Exchange Bank Data and Balances.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGUserSummaryDataResponse*
-(NSNumber*) v1usersummaryWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGUserSummaryDataResponse* output, NSError* error)) handler;


/// Exchange Bank Summary
/// Gets a Summary of Exchange Bank Data and Balances.
///
/// @param authorization API object to be added
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGWalletSummaryDataResponse*
-(NSNumber*) v1userwalletsummaryWithAuthorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGWalletSummaryDataResponse* output, NSError* error)) handler;



@end
