#import <Foundation/Foundation.h>
#import "SWGNewAddress.h"
#import "SWGFailResult.h"
#import "SWGWalletAddressDataResponse.h"
#import "SWGNewWallet.h"
#import "SWGSendCoinWallet.h"
#import "SWGSuccessResult.h"
#import "SWGSendExchange.h"
#import "SWGCode.h"
#import "SWGWithdrawID.h"
#import "SWGApi.h"

/**
* Coinsecure Api Documentation
* To generate an API key, please visit <a href='https://coinsecure.in/api' target='_new' class='homeapi'>https://coinsecure.in/api</a>.<br>Guidelines for use can be accessed at <a href='https://api.coinsecure.in/v1/guidelines'>https://api.coinsecure.in/v1/guidelines</a>.<br>Programming Language Libraries for use can be accessed at <a href='https://api.coinsecure.in/v1/code-libraries'>https://api.coinsecure.in/v1/code-libraries</a>.
*
* OpenAPI spec version: beta
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGWalletActionsApi: NSObject <SWGApi>

extern NSString* kSWGWalletActionsApiErrorDomain;
extern NSInteger kSWGWalletActionsApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// New Bitcoin Address
/// Generates a New Bitcoin Address to store coins.
///
/// @param body 
/// @param authorization Enter a valid Api Key. (optional)
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGWalletAddressDataResponse*
-(NSNumber*) v1userwalletcoinaddressnewWithBody: (SWGNewAddress*) body
    authorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGWalletAddressDataResponse* output, NSError* error)) handler;


/// Create New Wallet
/// Creates a New wallet to store addresses. This method also creates a single default address in each new wallet.
///
/// @param body 
/// @param authorization Enter a valid Api Key. (optional)
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGWalletAddressDataResponse*
-(NSNumber*) v1userwalletcoinnewWithBody: (SWGNewWallet*) body
    authorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGWalletAddressDataResponse* output, NSError* error)) handler;


/// Initiate Bitcoin Withdrawal
/// The code for verifying the withdrawal can be called from /v1/wallet/withdrawVerifycode. May require a 2FA code if 2FA is enabled on the account. A mail is sent to the users email requesting confirmation of the withdrawal. This confirmation mail can be disabled on the Coinsecure Profile page.
///
/// @param body 
/// @param authorization Enter a valid Api Key. (optional)
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccessResult*
-(NSNumber*) v1userwalletcoinwithdrawinitiateWithBody: (SWGSendCoinWallet*) body
    authorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccessResult* output, NSError* error)) handler;


/// Send to Exchange
/// This function transfers funds to yout Exchange Balance without the need for any confirmations.
///
/// @param body 
/// @param authorization Enter a valid Api Key. (optional)
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccessResult*
-(NSNumber*) v1userwalletcoinwithdrawsendToExchangeWithBody: (SWGSendExchange*) body
    authorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccessResult* output, NSError* error)) handler;


/// Cancel Bitcoin Withdrawal
/// Cancels an unverified withdrawal. You can get the code from /wallet/unverifiedWithdraws.
///
/// @param withdrawID 
/// @param authorization Enter a valid Api Key.
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccessResult*
-(NSNumber*) v1userwalletcoinwithdrawunverifiedcancelWithdrawIDWithWithdrawID: (NSString*) withdrawID
    authorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccessResult* output, NSError* error)) handler;


/// Verify Bitcoin Withdrawal
/// Verifies an unverified withdrawal. You can get the code from /v1/wallet/coin/withdraw/newVerifycode.
///
/// @param authorization Enter a valid Api Key.
/// @param body 
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccessResult*
-(NSNumber*) v1userwalletcoinwithdrawverifyWithAuthorization: (NSString*) authorization
    body: (SWGCode*) body
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccessResult* output, NSError* error)) handler;


/// Gets a Verification Code
/// Gets Coin Unverified Withdraws Codes to call and apply on /v1/wallet/coin/withdraw/unverified.
///
/// @param body You can get unverified withdraw ID&#39;s from /v1/exchange/bank/coin/withdrawVerifycode
/// @param authorization API object to be added (optional)
/// @param accept JSON, XML or CSV can be returned (Optional) (optional)
/// 
///  code:200 message:"Successful Request",
///  code:400 message:"Bad Request"
///
/// @return SWGSuccessResult*
-(NSNumber*) v1walletcoinwithdrawnewVerifycodeWithBody: (SWGWithdrawID*) body
    authorization: (NSString*) authorization
    accept: (NSString*) accept
    completionHandler: (void (^)(SWGSuccessResult* output, NSError* error)) handler;



@end
