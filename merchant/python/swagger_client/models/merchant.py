# coding: utf-8

"""
    coinMerchant Api Documentation

    To generate an API key, please visit <a href='https://pay.coinsecure.in/payment-tools/api' target='_new' class='homeapi'>https://pay.coinsecure.in/payment-tools/api</a>.<br>Guidelines for use can be accessed at <a href='https://pay.coinsecure.in/api/guidelines'>https://pay.coinsecure.in/api/guidelines</a>.

    OpenAPI spec version: 1.0B
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class Merchant(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Merchant - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'first_name': 'str',
            'last_name': 'str',
            'coin_balance': 'int',
            'fiat_balance': 'int',
            'merchant_type': 'str',
            'organization': 'str',
            'status': 'str',
            'website': 'str',
            'address': 'str',
            'admin_email': 'str',
            'business_type': 'str',
            'info': 'str',
            'min_coin_settlement': 'int',
            'min_fiat_settlement': 'int',
            'tel': 'str'
        }

        self.attribute_map = {
            'first_name': 'firstName',
            'last_name': 'lastName',
            'coin_balance': 'coinBalance',
            'fiat_balance': 'fiatBalance',
            'merchant_type': 'merchantType',
            'organization': 'organization',
            'status': 'status',
            'website': 'website',
            'address': 'address',
            'admin_email': 'adminEmail',
            'business_type': 'businessType',
            'info': 'info',
            'min_coin_settlement': 'minCoinSettlement',
            'min_fiat_settlement': 'minFiatSettlement',
            'tel': 'tel'
        }

        self._first_name = None
        self._last_name = None
        self._coin_balance = None
        self._fiat_balance = None
        self._merchant_type = None
        self._organization = None
        self._status = None
        self._website = None
        self._address = None
        self._admin_email = None
        self._business_type = None
        self._info = None
        self._min_coin_settlement = None
        self._min_fiat_settlement = None
        self._tel = None

    @property
    def first_name(self):
        """
        Gets the first_name of this Merchant.


        :return: The first_name of this Merchant.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """
        Sets the first_name of this Merchant.


        :param first_name: The first_name of this Merchant.
        :type: str
        """
        
        self._first_name = first_name

    @property
    def last_name(self):
        """
        Gets the last_name of this Merchant.


        :return: The last_name of this Merchant.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """
        Sets the last_name of this Merchant.


        :param last_name: The last_name of this Merchant.
        :type: str
        """
        
        self._last_name = last_name

    @property
    def coin_balance(self):
        """
        Gets the coin_balance of this Merchant.


        :return: The coin_balance of this Merchant.
        :rtype: int
        """
        return self._coin_balance

    @coin_balance.setter
    def coin_balance(self, coin_balance):
        """
        Sets the coin_balance of this Merchant.


        :param coin_balance: The coin_balance of this Merchant.
        :type: int
        """
        
        self._coin_balance = coin_balance

    @property
    def fiat_balance(self):
        """
        Gets the fiat_balance of this Merchant.


        :return: The fiat_balance of this Merchant.
        :rtype: int
        """
        return self._fiat_balance

    @fiat_balance.setter
    def fiat_balance(self, fiat_balance):
        """
        Sets the fiat_balance of this Merchant.


        :param fiat_balance: The fiat_balance of this Merchant.
        :type: int
        """
        
        self._fiat_balance = fiat_balance

    @property
    def merchant_type(self):
        """
        Gets the merchant_type of this Merchant.


        :return: The merchant_type of this Merchant.
        :rtype: str
        """
        return self._merchant_type

    @merchant_type.setter
    def merchant_type(self, merchant_type):
        """
        Sets the merchant_type of this Merchant.


        :param merchant_type: The merchant_type of this Merchant.
        :type: str
        """
        
        self._merchant_type = merchant_type

    @property
    def organization(self):
        """
        Gets the organization of this Merchant.


        :return: The organization of this Merchant.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """
        Sets the organization of this Merchant.


        :param organization: The organization of this Merchant.
        :type: str
        """
        
        self._organization = organization

    @property
    def status(self):
        """
        Gets the status of this Merchant.


        :return: The status of this Merchant.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this Merchant.


        :param status: The status of this Merchant.
        :type: str
        """
        
        self._status = status

    @property
    def website(self):
        """
        Gets the website of this Merchant.


        :return: The website of this Merchant.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """
        Sets the website of this Merchant.


        :param website: The website of this Merchant.
        :type: str
        """
        
        self._website = website

    @property
    def address(self):
        """
        Gets the address of this Merchant.


        :return: The address of this Merchant.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """
        Sets the address of this Merchant.


        :param address: The address of this Merchant.
        :type: str
        """
        
        self._address = address

    @property
    def admin_email(self):
        """
        Gets the admin_email of this Merchant.


        :return: The admin_email of this Merchant.
        :rtype: str
        """
        return self._admin_email

    @admin_email.setter
    def admin_email(self, admin_email):
        """
        Sets the admin_email of this Merchant.


        :param admin_email: The admin_email of this Merchant.
        :type: str
        """
        
        self._admin_email = admin_email

    @property
    def business_type(self):
        """
        Gets the business_type of this Merchant.


        :return: The business_type of this Merchant.
        :rtype: str
        """
        return self._business_type

    @business_type.setter
    def business_type(self, business_type):
        """
        Sets the business_type of this Merchant.


        :param business_type: The business_type of this Merchant.
        :type: str
        """
        
        self._business_type = business_type

    @property
    def info(self):
        """
        Gets the info of this Merchant.


        :return: The info of this Merchant.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """
        Sets the info of this Merchant.


        :param info: The info of this Merchant.
        :type: str
        """
        
        self._info = info

    @property
    def min_coin_settlement(self):
        """
        Gets the min_coin_settlement of this Merchant.


        :return: The min_coin_settlement of this Merchant.
        :rtype: int
        """
        return self._min_coin_settlement

    @min_coin_settlement.setter
    def min_coin_settlement(self, min_coin_settlement):
        """
        Sets the min_coin_settlement of this Merchant.


        :param min_coin_settlement: The min_coin_settlement of this Merchant.
        :type: int
        """
        
        self._min_coin_settlement = min_coin_settlement

    @property
    def min_fiat_settlement(self):
        """
        Gets the min_fiat_settlement of this Merchant.


        :return: The min_fiat_settlement of this Merchant.
        :rtype: int
        """
        return self._min_fiat_settlement

    @min_fiat_settlement.setter
    def min_fiat_settlement(self, min_fiat_settlement):
        """
        Sets the min_fiat_settlement of this Merchant.


        :param min_fiat_settlement: The min_fiat_settlement of this Merchant.
        :type: int
        """
        
        self._min_fiat_settlement = min_fiat_settlement

    @property
    def tel(self):
        """
        Gets the tel of this Merchant.


        :return: The tel of this Merchant.
        :rtype: str
        """
        return self._tel

    @tel.setter
    def tel(self, tel):
        """
        Sets the tel of this Merchant.


        :param tel: The tel of this Merchant.
        :type: str
        """
        
        self._tel = tel

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

