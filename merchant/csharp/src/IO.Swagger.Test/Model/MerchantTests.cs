/* 
 * coinMerchant Api Documentation
 *
 * To generate an API key, please visit <a href='https://pay.coinsecure.in/payment-tools/api' target='_new' class='homeapi'>https://pay.coinsecure.in/payment-tools/api</a>.<br>Guidelines for use can be accessed at <a href='https://pay.coinsecure.in/api/guidelines'>https://pay.coinsecure.in/api/guidelines</a>.
 *
 * OpenAPI spec version: 1.0B
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Merchant
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class MerchantTests
    {
        private Merchant instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new Merchant();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Merchant
        /// </summary>
        [Test]
        public void MerchantInstanceTest()
        {
            Assert.IsInstanceOf<Merchant> (instance, "instance is a Merchant");
        }

        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Test]
        public void FirstNameTest()
        {
            // TODO: unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Test]
        public void LastNameTest()
        {
            // TODO: unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'CoinBalance'
        /// </summary>
        [Test]
        public void CoinBalanceTest()
        {
            // TODO: unit test for the property 'CoinBalance'
        }
        /// <summary>
        /// Test the property 'FiatBalance'
        /// </summary>
        [Test]
        public void FiatBalanceTest()
        {
            // TODO: unit test for the property 'FiatBalance'
        }
        /// <summary>
        /// Test the property 'MerchantType'
        /// </summary>
        [Test]
        public void MerchantTypeTest()
        {
            // TODO: unit test for the property 'MerchantType'
        }
        /// <summary>
        /// Test the property 'Organization'
        /// </summary>
        [Test]
        public void OrganizationTest()
        {
            // TODO: unit test for the property 'Organization'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO: unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Website'
        /// </summary>
        [Test]
        public void WebsiteTest()
        {
            // TODO: unit test for the property 'Website'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Test]
        public void AddressTest()
        {
            // TODO: unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'AdminEmail'
        /// </summary>
        [Test]
        public void AdminEmailTest()
        {
            // TODO: unit test for the property 'AdminEmail'
        }
        /// <summary>
        /// Test the property 'BusinessType'
        /// </summary>
        [Test]
        public void BusinessTypeTest()
        {
            // TODO: unit test for the property 'BusinessType'
        }
        /// <summary>
        /// Test the property 'Info'
        /// </summary>
        [Test]
        public void InfoTest()
        {
            // TODO: unit test for the property 'Info'
        }
        /// <summary>
        /// Test the property 'MinCoinSettlement'
        /// </summary>
        [Test]
        public void MinCoinSettlementTest()
        {
            // TODO: unit test for the property 'MinCoinSettlement'
        }
        /// <summary>
        /// Test the property 'MinFiatSettlement'
        /// </summary>
        [Test]
        public void MinFiatSettlementTest()
        {
            // TODO: unit test for the property 'MinFiatSettlement'
        }
        /// <summary>
        /// Test the property 'Tel'
        /// </summary>
        [Test]
        public void TelTest()
        {
            // TODO: unit test for the property 'Tel'
        }

    }

}
